sw1

Imports System
Imports System.Data.Entity

Public Class Person
    Public Property Id As Integer
    Public Property Name As String
End Class

Public Class Student
    Inherits Person
    Public Property Grade As String
End Class

Public Class Teacher
    Inherits Person
    Public Property Subject As String
End Class

Public Class SchoolDbContext
    Inherits DbContext

    Public Property People As DbSet(Of Person)
End Class

Module Module1
    Sub Main()

        Database.SetInitializer(New DropCreateDatabaseIfModelChanges(Of SchoolDbContext)())

        Using db As New SchoolDbContext()

            db.People.Add(New Student With {.Name = "David", .Grade = "10"})
            db.People.Add(New Student With {.Name = "Ella", .Grade = "11"})
            db.People.Add(New Student With {.Name = "Faye", .Grade = "12"})
            db.People.Add(New Student With {.Name = "Gino", .Grade = "10"})
            db.People.Add(New Student With {.Name = "Mia", .Grade = "9"})
            db.People.Add(New Student With {.Name = "Lance", .Grade = "11"})

            db.People.Add(New Teacher With {.Name = "Sir Leo", .Subject = "Math"})
            db.People.Add(New Teacher With {.Name = "Ma'am Joy", .Subject = "Science"})
            db.People.Add(New Teacher With {.Name = "Sir Carlo", .Subject = "History"})
            db.People.Add(New Teacher With {.Name = "Ma'am Tess", .Subject = "English"})

            db.SaveChanges()
            Console.WriteLine("Data saved." & vbCrLf)

            Console.WriteLine("People List:")
            For Each person In db.People.ToList()
                If TypeOf person Is Student Then
                    Dim s = CType(person, Student)
                    Console.WriteLine($"Student: {s.Name}, Grade: {s.Grade}")
                ElseIf TypeOf person Is Teacher Then
                    Dim t = CType(person, Teacher)
                    Console.WriteLine($"Teacher: {t.Name}, Subject: {t.Subject}")
                End If
            Next

        End Using

        Console.WriteLine(vbCrLf & "Press any key to exit.")
        Console.ReadLine()
    End Sub
End Module


sw2

Imports System
Imports System.Data.Entity

Public Class Customer
    Public Property Id As Integer
    Public Property Name As String
    Public Property Email As String
End Class

Public Class AppDbContext
    Inherits DbContext
    Public Property Customers As DbSet(Of Customer)
End Class

Module Module1
    Sub Main()
        Database.SetInitializer(New DropCreateDatabaseIfModelChanges(Of AppDbContext)())

        Using db As New AppDbContext()

            db.Customers.RemoveRange(db.Customers)
            db.SaveChanges()

            Dim customers As New List(Of Customer) From {
                New Customer With {.Name = "Maria", .Email = "maria@example.com"},
                New Customer With {.Name = "Juan", .Email = "juan@example.com"},
                New Customer With {.Name = "Ana", .Email = "ana@example.com"},
                New Customer With {.Name = "Ben", .Email = "ben@example.com"},
                New Customer With {.Name = "Chloe", .Email = "chloe@example.com"},
                New Customer With {.Name = "Dante", .Email = "dante@example.com"},
                New Customer With {.Name = "Ella", .Email = "ella@example.com"},
                New Customer With {.Name = "Fred", .Email = "fred@example.com"},
                New Customer With {.Name = "Grace", .Email = "grace@example.com"},
                New Customer With {.Name = "Hugo", .Email = "hugo@example.com"}
            }

            db.Customers.AddRange(customers)
            db.SaveChanges()

   
            Dim maria = db.Customers.FirstOrDefault(Function(c) c.Name = "Maria")
            If maria IsNot Nothing Then
                maria.Email = "maria.updated@example.com"
            End If

            Dim juan = db.Customers.FirstOrDefault(Function(c) c.Name = "Juan")
            If juan IsNot Nothing Then
                db.Customers.Remove(juan)
            End If

            db.SaveChanges()

            Console.WriteLine("ðŸ”¹ Customer List:")
            For Each c In db.Customers.ToList()
                Console.WriteLine($"ID: {c.Id}, Name: {c.Name}, Email: {c.Email}")
            Next

        End Using

        Console.WriteLine(vbCrLf & "Press any key to exit.")
        Console.ReadLine()
    End Sub
End Module

lab 

DatabaseContext.vb
Imports System

Imports System.Data.Entity

 

Public Class Townie

        Public Property Id As Integer

        Public Property Name As String

        Public Property Profession As String

End Class

 

Public Class TownieDbContext

        Inherits DbContext

 

        Public Property Townies As DbSet(Of Townie)

End Class


Form1.vb
Imports System.Data.Entity

 

Public Class Form1

        Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load

            ' Auto-create DB if needed

            Database.SetInitializer(New DropCreateDatabaseIfModelChanges(Of TownieDbContext)())

 

            Using db As New TownieDbContext()

 

                ' Clear old data (optional if rerunning multiple times)

                db.Townies.RemoveRange(db.Townies)

                db.SaveChanges()

 

                ' Add 15 townies

                Dim townies As New List(Of Townie) From {

                    New Townie With {.Name = "Carol", .Profession = "Mayor"},

                    New Townie With {.Name = "Dess", .Profession = "Student"},

                    New Townie With {.Name = "Kris", .Profession = "Student"},

                    New Townie With {.Name = "Susie", .Profession = "Student"},

                    New Townie With {.Name = "Noelle", .Profession = "Student"},

                    New Townie With {.Name = "Rudy", .Profession = "Unemployed"},

                    New Townie With {.Name = "Berdly", .Profession = "Librarian"},

                    New Townie With {.Name = "Alphys", .Profession = "Teacher"},

                    New Townie With {.Name = "Undyne", .Profession = "Police Chief"},

                    New Townie With {.Name = "Asgore", .Profession = "Florist"},

                    New Townie With {.Name = "Alvin", .Profession = "Priest"},

                    New Townie With {.Name = "Toriel", .Profession = "Teacher"},

                    New Townie With {.Name = "Asriel", .Profession = "Student"},

                    New Townie With {.Name = "Gerson", .Profession = "Writer"},

                    New Townie With {.Name = "Temmie", .Profession = "Temmie"}

                }

 

                db.Townies.AddRange(townies)

                db.SaveChanges()

 

                DataGridView1.DataSource = townies

 

            End Using

        End Sub

 

        Private Sub Insert_Click(sender As Object, e As EventArgs) Handles Insert.Click

            Dim name As String = TextBox1.Text.Trim()

            Dim profession As String = TextBox2.Text.Trim()

 

            If (String.IsNullOrEmpty(name) Or String.IsNullOrEmpty(profession)) Then

                MessageBox.Show("Please enter name or profession.")

                Return

            End If

 

            Using db As New TownieDbContext()

                Dim newTownie As New Townie With {.Name = name, .Profession = profession}

                db.Townies.Add(newTownie)

                db.SaveChanges()

                DataGridView1.DataSource = db.Townies.ToList()

            End Using

        End Sub

 

        Private Sub Update_Click(sender As Object, e As EventArgs) Handles Update.Click

            If (DataGridView1.CurrentRow Is Nothing) Then

                MessageBox.Show("Please select a villager to update.")

                Return

            End If

 

            Dim townie As Townie = CType(DataGridView1.CurrentRow.DataBoundItem, Townie)

 

            Dim name As String = TextBox1.Text.Trim()

            Dim profession As String = TextBox2.Text.Trim()

 

            If (String.IsNullOrEmpty(name) Or String.IsNullOrEmpty(profession)) Then

                MessageBox.Show("Please enter name or profession.")

                Return

            End If

 

            Using db As New TownieDbContext()

                Dim updatedTownie = db.Townies.Find(townie.Id)

                If (updatedTownie IsNot Nothing) Then

                    updatedTownie.Name = name

                    updatedTownie.Profession = profession

                    db.SaveChanges()

                End If

                DataGridView1.DataSource = db.Townies.ToList()

            End Using

        End Sub

 

        Private Sub Delete_Click(sender As Object, e As EventArgs) Handles Delete.Click

            If (DataGridView1.CurrentRow Is Nothing) Then

                MessageBox.Show("Please select a villager to delete.")

                Return

            End If

 

            Dim townie As Townie = CType(DataGridView1.CurrentRow.DataBoundItem, Townie)

            Using db As New TownieDbContext()

                Dim deletedTownie = db.Townies.Find(townie.Id)

                If (deletedTownie IsNot Nothing) Then

                db.Townies.Remove(deletedTownie)

                    db.SaveChanges()

                End If

                DataGridView1.DataSource = db.Townies.ToList()

            End Using

        End Sub

End Class

End Class
